        //move()에 Scene View에서 플레이어가 바라보는 방향(정면)으로 플레이어 머리에서 레이저를 쏘는 것으로 보여줌
        // 주의) y값을 반영하면 카메라가 보는 각도로 인해 바닥이나 하늘을 바라보게 되고, 이대로 앞으로 가면 하늘로 승천하거나 땅으로 파묻혀 들어갈 수 있어 y값을 반드시 0으로!
        Debug.DrawRay(this.transform.position + new Vector3(0, 1, 0), new Vector3(cam.transform.forward.x, 0f, cam.transform.forward.z).normalized, Color.blue);

        // 이동 입력
        Vector2 moveInput = new Vector2(Input.GetAxis("Horizontal"), Input.GetAxis("Vertical"));

        // 전방 주시
        // 정규화를 통해 1만큼의 길이(방향값) 구함
        Vector3 lookFoward = new Vector3(cam.transform.forward.x, 0f, cam.transform.forward.z).normalized; // 카메라의 전방 확인
        Vector3 lookRight = new Vector3(cam.transform.right.x, 0f, cam.transform.right.z).normalized;              // 카메라의 오른쪽 확인

        // 캐릭터가 움직일 방향 계산
        Vector3 moveDir = lookFoward * moveInput.y + lookRight * moveInput.x;
        Quaternion rotateFoward = Quaternion.LookRotation(lookFoward);  // 플레어가 앞을 바라봄
        rb.rotation = Quaternion.Slerp(rb.rotation, rotateFoward, rotSpeed * Time.deltaTime);   // 부드럽게 회전
        this.transform.position += moveDir * Time.deltaTime * speed;